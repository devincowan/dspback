name: Selenium Browser QA Tests

on:
  push:
  # todo change this to develop
    # branches: [ develop ]
    branches: [ selenium-workflow ]
  pull_request:
    # branches: [ develop ]
    branches: [ selenium-workflow ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    # services:
    #   selenium:
    #     image: selenium/standalone-chrome

    steps:
    - uses: actions/checkout@v2

    # TODO clone QA-automation engine
    - name: Clone QA Engine
      uses: actions/checkout@v2
      with:
        repository: CUAHSI/QA-AutomationEngine
        path: QA-AutomationEngine
        ref: master

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      working-directory: QA-AutomationEngine
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Prepare Selenium
      # https://github.com/marketplace/actions/setup-chromedriver
      # uses: nanasess/setup-chromedriver@master
      uses: actions/checkout@v2
        # with:
          # Optional: do not specify to match Chrome's version
          # chromedriver-version: '88.0.4324.96'
    - run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

    # TODO: for now, we will just target dsp alpha but we sould really build develop and test that...
    # kinda the whole point...
    # - name: Build containers
    #   run: make build

    # - name: Startup containers
    #   run: make up-d

    # - name: Sleep for 10 seconds
    #   run: sleep 10s
    #   shell: bash
      
    # - name: Install dependencies
    #   run: make install
      
    - name: Run Tests
      working-directory: QA-AutomationEngine
      run: ./hydrotest dsp DspHydroshareTestSuite --browser chrome --base https://dsp-alpha.criticalzone.org/ 2>&1 | tee -a se-browser-test-coverage.txt

    # TODO: does something like this exist for selenium coverage?
    # - name: Comment coverage
    #   uses: coroo/pytest-coverage-commentator@v1.0.2
    #   with:
    #     pytest-coverage: pytest-coverage.txt

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        path: QA-AutomationEngine/se-browser-test-coverage.txt


